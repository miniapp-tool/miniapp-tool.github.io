import{r as a,o as n,c as s,a as e,w as t,F as p,d as o,b as c}from"./app.aa972803.js";const i={},l=o('<h1 id="page" tabindex="-1"><a class="header-anchor" href="#page" aria-hidden="true">#</a> $Page</h1><ul><li><p>类型:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">$Page</span><span class="token generic class-name"><span class="token operator">&lt;</span>\n  Data <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  Custom <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span>\n<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> options<span class="token operator">:</span> PageOptions<span class="token operator">&lt;</span>Data<span class="token punctuation">,</span> Custom<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>参数:</p><ul><li><code>name</code>: 页面简称</li><li><code>options</code>: 页面选项</li></ul></li></ul><p>框架提供的页面注册器</p><h2 id="扩展" tabindex="-1"><a class="header-anchor" href="#扩展" aria-hidden="true">#</a> 扩展</h2><h3 id="onregister" tabindex="-1"><a class="header-anchor" href="#onregister" aria-hidden="true">#</a> onRegister</h3><ul><li>类型: <code>(): void</code></li></ul><p>在页面即将注册时调用</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>此时 this 上尚未挂载小程序原生方法</p></div><h3 id="onapplaunch" tabindex="-1"><a class="header-anchor" href="#onapplaunch" aria-hidden="true">#</a> onAppLaunch</h3><ul><li><p>类型: <code>onAppLaunch(options: WechatMiniprogram.App.LaunchShowOption): void | Promise&lt;void&gt;</code></p></li><li><p>参数:</p><ul><li><code>options</code>: App 启动时的 <code>onLaunch</code> 参数</li></ul></li></ul><p>在 <code>App.onLaunch</code> 触发时调用</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>框架在 App 启动时仅触发此方法，不会检测与等待异步方法返回。</p></div><h3 id="onawake" tabindex="-1"><a class="header-anchor" href="#onawake" aria-hidden="true">#</a> onAwake</h3><ul><li><p>类型: <code>onAwake(time: number): void | Promise&lt;void&gt;</code></p></li><li><p>参数:</p><ul><li><code>time</code>: 为本次休眠时间，单位 ms</li></ul></li></ul><p>在小程序从后台唤醒时调用</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>框架在 App 启动时仅触发此方法，不会检测与等待异步方法返回。</p></div><h3 id="onpreload" tabindex="-1"><a class="header-anchor" href="#onpreload" aria-hidden="true">#</a> onPreload</h3><ul><li><p>类型: <code>onPreload(options: PageQuery): void | Promise&lt;void&gt;</code></p></li><li><p>参数:</p><ul><li><code>options</code>: 为通过触发预加载携带参数生成的参数对象</li></ul></li></ul><p>预加载生命周期，可在其他页面中使用 <code>this.$preload(pageNameWithArgs | pageUrlWIthArgs)</code> 触发特定页面的预加载周期。</p><p>你可以在用户特定行为后根据用户行为漏斗特点预加载对应界面准备数据。</p><div class="custom-container warning"><p class="custom-container-title">小程序分包</p><p>由于小程序每个分包下页面会在首次请求跳转到某个分包页面时注册，所以此时进入的首个页面无法触发 <code>onPreload</code> 周期。</p></div><h3 id="onnavigate" tabindex="-1"><a class="header-anchor" href="#onnavigate" aria-hidden="true">#</a> onNavigate</h3><ul><li><p>类型: <code>onNavigate(options: PageQuery): void | Promise&lt;void&gt;</code></p></li><li><p>参数:</p><ul><li><code>options</code>: 为通过触发预加载携带参数生成的参数对象</li></ul></li></ul><p>页面即将被跳转时触发。</p><p>在进行页面间跳转时吗，会先执行对应页面的 <code>onNavigate</code> 再进行跳转。</p><p>建议将低耗时 (&lt; 150ms) 的操作放入 <code>onNavigate</code> 周期，并在 <code>onLoad</code> 时判断 <code>onNavigate</code> 是否成功触发。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>为触发 <code>onNavigate</code> 生命周期，跳转必须使用框架包装的方法:</p><ul><li><code>$go</code></li><li><code>$redirect</code></li><li><code>$switch</code></li><li><code>$reLaunch</code></li><li><code>$bindGo</code></li><li><code>$bindRedirect</code></li><li><code>$bindSwitch</code></li><li><code>$bindReLaunch</code></li></ul></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>由于同步或异步的 <code>onNavigate</code> 均受到支持，为了避免执行时间较长的方法阻塞跳转、迷惑用户，在达到 <code>maxDelay</code> 时长后框架会强制进行跳转，而不再等待 <code>onNavigate</code> 完成。</p><p>另外由于小程序每个分包下页面会在首次请求跳转到某个分包页面时注册，所以此时进入的首个页面无法触发 <code>onNavigate</code> 周期。</p></div><h2 id="注入" tabindex="-1"><a class="header-anchor" href="#注入" aria-hidden="true">#</a> 注入</h2><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> $name</h3><ul><li>类型: <code>string</code></li></ul><p>当前页面名称</p><h3 id="state" tabindex="-1"><a class="header-anchor" href="#state" aria-hidden="true">#</a> $state</h3><ul><li>类型: <code>Record&lt;string, any&gt;</code></li></ul><p>框架生成的页面状态</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>你可以考虑将部分自定义扩展的数据注入到此处</p></div><ul><li><code>$state.firstOpen</code>: 是否是第一个打开的页面</li></ul><h3 id="emitter" tabindex="-1"><a class="header-anchor" href="#emitter" aria-hidden="true">#</a> $emitter</h3>',38),r=c("事件派发器，是一个 "),u=c("$Emitter"),d=c(" 实例"),k=o('<ul><li><p><code>$emitter.on(type:string, handler: (event?:any) =&gt; void | Promise&lt;void&gt;): void</code>: 监听 <code>type</code> 事件</p></li><li><p><code>$emitter.emit(type:string, event?:any): void</code>: 同步触发 <code>type</code> 事件</p></li><li><p><code>$emitter.emitAsync(type:string, event?:any): Promise&lt;void&gt;</code>: 异步触发 <code>type</code> 事件并接受回调</p></li><li><p><code>$emitter.off(type:string, handler: (event?:any) =&gt; void | Promise&lt;void&gt;): Promise&lt;void&gt;</code>: 取消监听 <code>type</code> 的 <code>handler</code> 事件或全部事件 (当未传入 <code>handler</code>)</p></li></ul><h3 id="refs" tabindex="-1"><a class="header-anchor" href="#refs" aria-hidden="true">#</a> $refs</h3><ul><li>类型: <code>Record&lt;string, ComponentInstance&gt;</code></li></ul><p>指定了 ref 的子组件实例 Map，可用于获取子组件引用</p><div class="custom-container tip"><p class="custom-container-title">示例</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>custom-component</span> <span class="token attr-name">binding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customRef1<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  lifetimes<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">attached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>customComp<span class="token punctuation">;</span> <span class="token comment">// 根据 ref 属性获取子组件的实例引用</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> $</h3><p>父子组件沟通器</p><p>提供了通过 <code>binding=&quot;$&quot;</code> 形式建立父子组件/页面与组件沟通的能力</p><h3 id="preload" tabindex="-1"><a class="header-anchor" href="#preload" aria-hidden="true">#</a> $preload</h3><ul><li><p>类型:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">$preload</span><span class="token punctuation">(</span>pagename<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">|</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>参数:</p><ul><li><code>pagename</code>: 页面简称，可以带上 <code>queryString</code></li></ul></li></ul><p>提前预加载指定页面，即触发对应页面的 <code>onPreload</code> 生命周期</p><h3 id="go" tabindex="-1"><a class="header-anchor" href="#go" aria-hidden="true">#</a> $go</h3><ul><li><p>类型:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">$go</span><span class="token punctuation">(</span>\n  pagename<span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>WechatMiniprogram<span class="token punctuation">.</span>NavigateToSuccessCallbackResult<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>参数:</p><ul><li><code>pagename</code>: 页面简称，可以带上 <code>queryString</code></li></ul></li></ul><p>导航到指定页面</p><p>本函数是 <code>wx.navigateTo</code> 的封装</p><div class="custom-container tip"><p class="custom-container-title">示例</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$go</span><span class="token punctuation">(</span><span class="token string">&quot;play?vid=xxx&amp;cid=xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><h3 id="redirect" tabindex="-1"><a class="header-anchor" href="#redirect" aria-hidden="true">#</a> $redirect</h3><ul><li><p>类型:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">$redirect</span><span class="token punctuation">(</span>\n  pagename<span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>WechatMiniprogram<span class="token punctuation">.</span>GeneralCallbackResult<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>参数:</p><ul><li><code>pagename</code>: 页面简称，可以带上 <code>queryString</code></li></ul></li></ul><p>重定向到指定页面, 即<strong>替换页面，不产生历史</strong>。</p><p>本函数是 <code>wx.redirectTo</code> 的封装</p><div class="custom-container tip"><p class="custom-container-title">示例</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$redirect</span><span class="token punctuation">(</span><span class="token string">&quot;about?year=2021&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><h3 id="switch" tabindex="-1"><a class="header-anchor" href="#switch" aria-hidden="true">#</a> $switch</h3><ul><li><p>类型:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> $<span class="token keyword">switch</span><span class="token punctuation">(</span>\n  pagename<span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>WechatMiniprogram<span class="token punctuation">.</span>GeneralCallbackResult<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>参数:</p><ul><li><code>pagename</code>: 页面简称，可以带上 <code>queryString</code></li></ul></li></ul><p>跳转到指定 tabBar 页面，并关闭其他所有非 tabBar 页面</p><p>本函数是 <code>wx.switchTab</code> 的封装</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>路径参数只用于触发 <code>onNavigate</code> (<code>wx.switchTab</code> 不支持参数)</p></div><div class="custom-container tip"><p class="custom-container-title">示例</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$<span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token string">&quot;main?user=mrhope&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><h3 id="relaunch" tabindex="-1"><a class="header-anchor" href="#relaunch" aria-hidden="true">#</a> $reLaunch</h3><ul><li><p>类型:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">$reLaunch</span><span class="token punctuation">(</span>\n  pagename<span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>WechatMiniprogram<span class="token punctuation">.</span>GeneralCallbackResult<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>参数:</p><ul><li><code>pagename</code>: 页面简称，可以带上 <code>queryString</code></li></ul></li></ul><p>关闭所有页面，之后打开到应用内的某个页面</p><p>本函数是 <code>wx.reLaunch</code> 的封装</p><div class="custom-container tip"><p class="custom-container-title">示例</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$launch</span><span class="token punctuation">(</span><span class="token string">&quot;main?user=mrhope&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><h3 id="back" tabindex="-1"><a class="header-anchor" href="#back" aria-hidden="true">#</a> $back</h3><ul><li><p>类型:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">$back</span><span class="token punctuation">(</span>delta <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>WechatMiniprogram<span class="token punctuation">.</span>GeneralCallbackResult<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>参数:</p><ul><li><code>delta</code>: 后退的层级数，默认为 <code>1</code></li></ul></li></ul><p>本函数是 <code>wx.navigateBack</code> 的简单封装</p><h3 id="bindgo" tabindex="-1"><a class="header-anchor" href="#bindgo" aria-hidden="true">#</a> $bindGo</h3><p><code>$go</code> 的视图层代理方法，你需要在视图层使用 data-set 来绑定跳转配置:</p><ul><li><code>data-url</code> 跳转到的页面简称或绝对路径，可带参数</li><li><code>data-before</code> 跳转前执行</li><li><code>data-after</code> 跳转后执行</li></ul><div class="custom-container tip"><p class="custom-container-title">提示</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$bindGo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>play<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-before</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onClickBefore<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  click go\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><h3 id="bindredirect" tabindex="-1"><a class="header-anchor" href="#bindredirect" aria-hidden="true">#</a> $bindRedirect</h3><p><code>$redirect</code> 的视图层代理方法，你需要在视图层使用 data-set 来绑定跳转配置:</p><ul><li><code>data-url</code> 跳转到的页面简称或绝对路径，可带参数</li><li><code>data-before</code> 跳转前执行</li><li><code>data-after</code> 跳转后执行</li></ul><div class="custom-container tip"><p class="custom-container-title">提示</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n  <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$bindRedirect<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">data-url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/pages/play<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">data-after</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onClickAfter<span class="token punctuation">&quot;</span></span>\n<span class="token punctuation">&gt;</span></span>\n  click redirect\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><h3 id="bindswitch" tabindex="-1"><a class="header-anchor" href="#bindswitch" aria-hidden="true">#</a> $bindSwitch</h3><p><code>$switch</code> 的视图层代理方法，你需要在视图层使用 data-set 来绑定跳转配置:</p><ul><li><p><code>data-url</code> 跳转到的页面简称或绝对路径，可带参数</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>由于 <code>wx.switchTab()</code> 不支持参数，参数仅用于触发对应页面的 <code>onNavigate</code> 生命周期</p></div></li><li><p><code>data-before</code> 跳转前执行</p></li><li><p><code>data-after</code> 跳转后执行</p></li></ul><h3 id="bindrelaunch" tabindex="-1"><a class="header-anchor" href="#bindrelaunch" aria-hidden="true">#</a> $bindRelaunch</h3><p><code>$reLaunch</code> 的视图层代理方法，你需要在视图层使用 data-set 来绑定跳转配置:</p><ul><li><code>data-url</code> 跳转到的页面简称或绝对路径，可带参数</li><li><code>data-before</code> 跳转前执行</li><li><code>data-after</code> 跳转后执行</li></ul>',49);i.render=function(o,c){const i=a("RouterLink");return n(),s(p,null,[l,e("p",null,[r,e(i,{to:"/api/enhance/emitter.html"},{default:t((()=>[u])),_:1}),d]),k],64)};export{i as default};
