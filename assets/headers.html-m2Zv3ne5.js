import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as p,c as o,a as s,b as n,d as c,e as i}from"./app-D3_IwEQQ.js";const l={},r=s("h1",{id:"headers",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#headers","aria-hidden":"true"},"#"),n(" Headers")],-1),u={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Headers",target:"_blank",rel:"noopener noreferrer"},k=i(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">HeadersInit</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">|</span> Headers<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Headers</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token punctuation">[</span><span class="token constant">NORMALIZED_HEADERS</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token punctuation">[</span><span class="token constant">RAW_HEADER_NAMES</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>init<span class="token operator">?</span><span class="token operator">:</span> HeadersInit<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * Appends a new value onto an existing header inside a \`Headers\` object, or adds the header if it does not already exist.
   */</span>
  <span class="token function">append</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * Deletes a header from the \`Headers\` object.
   */</span>
  <span class="token keyword">delete</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * Returns a \`ByteString\` sequence of all the values of a header with a given name.
   */</span>
  <span class="token function">get</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * Returns an array containing the values
   * of all Set-Cookie headers associated
   * with a response
   */</span>
  <span class="token function">getSetCookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * Returns a boolean stating whether a \`Headers\` object contains a certain header.
   */</span>
  <span class="token function">has</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * Sets a new value for an existing header inside a \`Headers\` object, or adds the header if it does not already exist.
   */</span>
  <span class="token function">set</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * Traverses the \`Headers\` object,
   * calling the given callback for each header.
   */</span>
  <span class="token generic-function"><span class="token function">forEach</span><span class="token generic class-name"><span class="token operator">&lt;</span>ThisArg <span class="token operator">=</span> <span class="token keyword">this</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
    <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>
      <span class="token keyword">this</span><span class="token operator">:</span> ThisArg<span class="token punctuation">,</span>
      value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
      parent<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span>
    thisArg<span class="token operator">?</span><span class="token operator">:</span> ThisArg<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> IterableIterator<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> IterableIterator<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> IterableIterator<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> IterableIterator<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function d(v,m){const a=t("ExternalLinkIcon");return p(),o("div",null,[r,s("p",null,[n("更多信息请参考 "),s("a",u,[n("MDN"),c(a)]),n("。")]),k])}const h=e(l,[["render",d],["__file","headers.html.vue"]]);export{h as default};
