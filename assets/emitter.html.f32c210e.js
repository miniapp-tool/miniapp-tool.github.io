import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e}from"./app.5463b367.js";const t={},p=e(`<h1 id="emitter" tabindex="-1"><a class="header-anchor" href="#emitter" aria-hidden="true">#</a> Emitter</h1><ul><li><p>\u7C7B\u578B:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">Emitter</span><span class="token generic class-name"><span class="token operator">&lt;</span>Events <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span>EventType<span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>
  all<span class="token operator">?</span><span class="token operator">:</span> EventHandlerMap<span class="token operator">&lt;</span>Events<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token operator">:</span> EmitterInstance<span class="token operator">&lt;</span>Events<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>\u6846\u67B6\u4E2D\u4F7F\u7528\u7684\u4E8B\u4EF6\u6D3E\u53D1\u5668\u3002</p><h2 id="\u521B\u5EFA\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u5B9E\u4F8B" aria-hidden="true">#</a> \u521B\u5EFA\u5B9E\u4F8B</h2><p>\u4F60\u9700\u8981\u901A\u8FC7\u8C03\u7528 <code>Emitter()</code> \u8FD4\u56DE\u4E00\u4E2A Emitter \u5B9E\u4F8B\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p><code>Emitter</code> \u652F\u6301\u5728\u8C03\u7528\u65F6\u901A\u8FC7\u6CDB\u578B\u4F20\u5165\u4E00\u4E2A <code>Events</code> \u5BF9\u8C61\u6765\u5728 TypeScript \u4E0B\u8FDB\u884C\u7C7B\u578B\u63A8\u5BFC\u3002</p><p>\u4F8B\u5B50</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Emitter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@mptool/enhance&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Events</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  bar<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  baz<span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> emitter <span class="token operator">=</span> <span class="token generic-function"><span class="token function">Emitter</span><span class="token generic class-name"><span class="token operator">&lt;</span>Events<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// inferred as EmitterInstance&lt;Events&gt;</span>

emitter<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;e&#39; has inferred type &#39;string&#39;</span>

emitter<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: Argument of type &#39;number&#39; is not assignable to parameter of type &#39;string&#39;. (2345)</span>

emitter<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;baz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;baz&#39; should not contain event object</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="emitterinstance-all" tabindex="-1"><a class="header-anchor" href="#emitterinstance-all" aria-hidden="true">#</a> emitterInstance.all</h2><ul><li>\u7C7B\u578B: <code>all: EventHandlerMap&lt;Events&gt;</code></li></ul><p>\u4E8B\u4EF6\u540D\u79F0\u5230\u5DF2\u6CE8\u518C\u5904\u7406\u51FD\u6570\u7684\u6620\u5C04\u3002</p><h2 id="emitterinstance-on" tabindex="-1"><a class="header-anchor" href="#emitterinstance-on" aria-hidden="true">#</a> emitterInstance.on</h2><p>\u4E3A\u7ED9\u5B9A\u7C7B\u578B\u6CE8\u518C\u4E8B\u4EF6\u5904\u7406\u7A0B\u5E8F\u3002</p><ul><li><p>\u7C7B\u578B:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">on</span><span class="token generic class-name"><span class="token operator">&lt;</span>Key <span class="token keyword">extends</span> <span class="token keyword">keyof</span> Events<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  type<span class="token operator">:</span> Key<span class="token punctuation">,</span>
  handler<span class="token operator">:</span> GenericEventHandler
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u53C2\u6570:</p><ul><li>type: <code>string | symbol</code> \u8981\u4FA6\u542C\u7684\u4E8B\u4EF6\u7C7B\u578B\uFF0C\u6216\u4F7F\u7528 <code>&#39;*&#39;</code> \u76D1\u542C\u6240\u6709\u4E8B\u4EF6</li><li>handler: <code>Function</code> \u54CD\u5E94\u7ED9\u5B9A\u4E8B\u4EF6\u65F6\u8C03\u7528\u7684\u51FD\u6570</li></ul></li></ul><h2 id="emitterinstance-off" tabindex="-1"><a class="header-anchor" href="#emitterinstance-off" aria-hidden="true">#</a> emitterInstance.off</h2><p>\u79FB\u9664\u7ED9\u5B9A\u7C7B\u578B\u7684\u4E8B\u4EF6\u5904\u7406\u7A0B\u5E8F\u3002\u5982\u679C\u672A\u4F20\u5165 <code>handler</code>\uFF0C\u5219\u5220\u9664\u7ED9\u5B9A\u7C7B\u578B\u7684\u6240\u6709\u5904\u7406\u7A0B\u5E8F\u3002</p><ul><li><p>\u7C7B\u578B:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">off</span><span class="token generic class-name"><span class="token operator">&lt;</span>Key <span class="token keyword">extends</span> <span class="token keyword">keyof</span> Events<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  type<span class="token operator">:</span> Key<span class="token punctuation">,</span>
  handler<span class="token operator">?</span><span class="token operator">:</span> GenericEventHandler
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u53C2\u6570:</p><ul><li>type: <code>string | symbol</code> \u8981\u53D6\u6D88\u76D1\u542C\u4E8B\u4EF6\u7C7B\u578B\uFF0C\u6216\u4F7F\u7528 <code>&#39;*&#39;</code> \u53D6\u6D88\u6240\u6709\u4E8B\u4EF6</li><li>handler: <code>Function</code> \u8981\u5220\u9664\u7684\u5904\u7406\u7A0B\u5E8F\u51FD\u6570</li></ul></li></ul><h2 id="emitterinstance-emit" tabindex="-1"><a class="header-anchor" href="#emitterinstance-emit" aria-hidden="true">#</a> emitterInstance.emit</h2><p>\u8C03\u7528\u7ED9\u5B9A\u7C7B\u578B\u7684\u6240\u6709\u5904\u7406\u51FD\u6570\u3002\u5982\u679C\u5B58\u5728 <code>&#39;*&#39;</code>\uFF0C\u5219\u4F1A\u5728\u6240\u6709\u5904\u7406\u51FD\u6570\u8C03\u7528\u7ED3\u675F\u540E\u8C03\u7528\u5B83\u3002</p><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p>\u4E0D\u652F\u6301\u624B\u52A8\u89E6\u53D1 <code>*</code></p></div><ul><li><p>\u7C7B\u578B:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">emit</span><span class="token generic class-name"><span class="token operator">&lt;</span>Key <span class="token keyword">extends</span> <span class="token keyword">keyof</span> Events<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>type<span class="token operator">:</span> Key<span class="token punctuation">,</span> event<span class="token operator">?</span><span class="token operator">:</span> Events<span class="token punctuation">[</span>Key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>\u53C2\u6570:</p><ul><li>type: <code>string | symbol</code> \u8981\u53D6\u6D88\u76D1\u542C\u4E8B\u4EF6\u7C7B\u578B\uFF0C\u6216\u4F7F\u7528 <code>&#39;*&#39;</code> \u53D6\u6D88\u6240\u6709\u4E8B\u4EF6</li><li>event: <code>\u4EFB\u4F55\u503C</code>\uFF0C\u63A8\u8350\u4F20\u5165\u5BF9\u8C61</li></ul></li></ul><h2 id="emitterinstance-emitasync" tabindex="-1"><a class="header-anchor" href="#emitterinstance-emitasync" aria-hidden="true">#</a> emitterInstance.emitAsync</h2><p>\u5F02\u6B65\u8C03\u7528\u7ED9\u5B9A\u7C7B\u578B\u7684\u6240\u6709\u5904\u7406\u51FD\u6570\u3002\u5982\u679C\u5B58\u5728 <code>&#39;*&#39;</code>\uFF0C\u5219\u4F1A\u5728\u6240\u6709\u5904\u7406\u51FD\u6570\u8C03\u7528\u7ED3\u675F\u540E\u8C03\u7528\u5B83\u3002</p><p>\u5168\u90E8\u5904\u7406\u51FD\u6570\u8C03\u7528\u5B8C\u6210\u540E\uFF0C\u89E6\u53D1\u81EA\u8EAB\u56DE\u8C03</p><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p>\u4E0D\u652F\u6301\u624B\u52A8\u89E6\u53D1 <code>*</code></p></div><ul><li><p>\u7C7B\u578B:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">emitAsync</span><span class="token generic class-name"><span class="token operator">&lt;</span>Key <span class="token keyword">extends</span> <span class="token keyword">keyof</span> Events<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  type<span class="token operator">:</span> Key<span class="token punctuation">,</span>
  event<span class="token operator">?</span><span class="token operator">:</span> Events<span class="token punctuation">[</span>Key<span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u53C2\u6570:</p><ul><li>type: <code>string | symbol</code> \u8981\u53D6\u6D88\u76D1\u542C\u4E8B\u4EF6\u7C7B\u578B\uFF0C\u6216\u4F7F\u7528 <code>&#39;*&#39;</code> \u53D6\u6D88\u6240\u6709\u4E8B\u4EF6</li><li>event: <code>\u4EFB\u4F55\u503C</code>\uFF0C\u63A8\u8350\u4F20\u5165\u5BF9\u8C61</li></ul></li></ul>`,24),o=[p];function c(i,l){return s(),a("div",null,o)}var u=n(t,[["render",c],["__file","emitter.html.vue"]]);export{u as default};
